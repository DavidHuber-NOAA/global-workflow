#! /usr/bin/env bash

if [[ $# -ne 1 ]]; then

    echo "Must specify an input argument to set runtime environment variables!"
    echo "argument can be any one of the following:"
    echo "fcst post"
    echo "Note: Hercules is only set up to run in forecast-only mode"
    exit 1

fi

step=$1

export launcher="srun -l --export=ALL"
export mpmd_opt="--multi-prog --output=mpmd.%j.%t.out"

# Configure MPI environment
export MPI_BUFS_PER_PROC=2048
export MPI_BUFS_PER_HOST=2048
export MPI_GROUP_MAX=256
export MPI_MEMMAP_OFF=1
export MP_STDOUTMODE="ORDERED"
export KMP_AFFINITY=scatter
export OMP_STACKSIZE=2048000
export NTHSTACK=1024000000
#export LD_BIND_NOW=1
export I_MPI_EXTRA_FILESYSTEM=1
export I_MPI_EXTRA_FILESYSTEM_LIST=lustre

# num_tasks is defined in each job config
export APRUN="${launcher} -n ${num_tasks}"
# If threads is defined, append it to the launcher command
if [[ -z ${threads+0} ]]; then
    export APRUN="${APRUN} --cpus-per-node=${threads}"
fi

ulimit -s unlimited
ulimit -a

case ${step} in
 "prep" | "prepbufr")

    export POE="NO"
    export BACK=${BACK:-"YES"}
    export sys_tp="HERCULES"
    export launcher_PREP="srun"
 ;;
 "prepsnowobs")

    export APRUN_CALCFIMS="${launcher} -n 1"
 ;;
 "waveinit" | "waveprep" | "wavepostsbs" | "wavepostbndpnt" | "wavepostpnt" | "wavepostbndpntbll")

    export CFP_MP="YES"
    [[ "${step}" = "waveprep" ]] && export MP_PULSE=0
    export wavempexec=${launcher}
    export wave_mpmd=${mpmd_opt}

 ;;
 "aeroanlrun")

    export APRUNCFP="${launcher} -n \$ncmd ${mpmd_opt}"

 ;;
 "snowanl")

    export APRUN_APPLY_INCR="${launcher} -n 6"
 ;;
 "ocnanalbmat")

    export APRUNCFP="${launcher} -n \$ncmd ${mpmd_opt}"

 ;;
 "ocnanalrun")

    export APRUNCFP="${launcher} -n \$ncmd ${mpmd_opt}"

 ;;
 "ocnanalchkpt")

    export APRUNCFP="${launcher} -n \$ncmd ${mpmd_opt}"

 ;;
 "anal" | "analcalc")

    export MKL_NUM_THREADS=4
    export MKL_CBWR=AUTO

    export CFP_MP=${CFP_MP:-"YES"}
    export USE_CFP=${USE_CFP:-"YES"}
    export APRUNCFP="${launcher} -n \$ncmd ${mpmd_opt}"

    export NTHREADS_CALCINC=${nth_calcinc:-1}
    [[ ${NTHREADS_CALCINC} -gt ${nth_max} ]] && export NTHREADS_CALCINC=${nth_max}
    export APRUN_CALCINC="${launcher} \$ncmd --cpus-per-task=${NTHREADS_CALCINC}"

    export NTHREADS_CYCLE=${nth_cycle:-12}
    [[ ${NTHREADS_CYCLE} -gt ${npe_node_max} ]] && export NTHREADS_CYCLE=${npe_node_max}
    npe_cycle=${ntiles:-6}
    export APRUN_CYCLE="${launcher} -n ${npe_cycle} --cpus-per-task=${NTHREADS_CYCLE}"

    export NTHREADS_GAUSFCANL=1
    npe_gausfcanl=${npe_gausfcanl:-1}
    export APRUN_GAUSFCANL="${launcher} -n ${npe_gausfcanl} --cpus-per-task=${NTHREADS_GAUSFCANL}"
 ;;
 "sfcanl")

    npe_sfcanl=${ntiles:-6}
    export APRUN_CYCLE="${launcher} -n ${npe_sfcanl} --cpus-per-task=${NTHREADS_CYCLE}"

 ;;
 "eobs")

    export MKL_NUM_THREADS=4
    export MKL_CBWR=AUTO

    export CFP_MP=${CFP_MP:-"YES"}
    export USE_CFP=${USE_CFP:-"YES"}
    export APRUNCFP="${launcher} -n \$ncmd ${mpmd_opt}"

 ;;
 "eupd")

    export CFP_MP=${CFP_MP:-"YES"}
    export USE_CFP=${USE_CFP:-"YES"}
    export APRUNCFP="${launcher} -n \$ncmd ${mpmd_opt}"

 ;;
 "atmos_products")

    export USE_CFP="YES"  # Use MPMD for downstream product generation
 ;;

 "ecen")

    export NTHREADS_CHGRES=${nth_chgres:-12}
    [[ ${NTHREADS_CHGRES} -gt ${npe_node_max} ]] && export NTHREADS_CHGRES=${npe_node_max}
    export APRUN_CHGRES="time"

    export NTHREADS_CALCINC=${nth_calcinc:-1}
    [[ ${NTHREADS_CALCINC} -gt ${nth_max} ]] && export NTHREADS_CALCINC=${nth_max}
    export APRUN_CALCINC="${launcher} -n ${npe_ecen} --cpus-per-task=${NTHREADS_CALCINC}"

 ;;
 "esfc")

    export NTHREADS_CYCLE=${nth_cycle:-14}
    [[ ${NTHREADS_CYCLE} -gt ${npe_node_max} ]] && export NTHREADS_CYCLE=${npe_node_max}
    export APRUN_CYCLE="${launcher} -n ${npe_esfc} --cpus-per-task=${NTHREADS_CYCLE}"

 ;;
 "postsnd")

    export CFP_MP="YES"

    nth_max=$((npe_node_max / npe_node_postsnd))

    export NTHREADS_POSTSND=${nth_postsnd:-1}
    [[ ${NTHREADS_POSTSND} -gt ${nth_max} ]] && export NTHREADS_POSTSND=${nth_max}
    export APRUN_POSTSND="${launcher} -n ${npe_postsnd} --cpus-per-task=${NTHREADS_POSTSND}"

    export NTHREADS_POSTSNDCFP=${nth_postsndcfp:-1}
    [[ ${NTHREADS_POSTSNDCFP} -gt ${nth_max} ]] && export NTHREADS_POSTSNDCFP=${nth_max}
    export APRUN_POSTSNDCFP="${launcher} -n ${npe_postsndcfp} ${mpmd_opt}"

 ;;
 "gempak")

    export CFP_MP="YES"

 ;;
esac
